---
import '../styles/global.css'

export interface Props {
  title: string
  description?: string
}

const {
  title,
  description = 'The SQL-like ORM for the Browser. DexBee brings the familiar power of SQL query builders to IndexedDB with declarative, composable queries and superior TypeScript integration.',
} = Astro.props
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>

    <!-- Fonts will load via CSS imports in global.css -->

    <!-- Theme script to prevent flash -->
    <script is:inline>
  (function () {
    // Get theme from localStorage or system preference
    const storedTheme = localStorage.getItem('theme')
    const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches
    const theme = storedTheme || (systemPrefersDark ? 'dark' : 'light')

    // Apply theme immediately
    document.documentElement.classList.toggle('dark', theme === 'dark')

    // Store theme in localStorage to ensure consistency
    localStorage.setItem('theme', theme)

    // Dispatch theme change event for React components
    window.dispatchEvent(new CustomEvent('themeChange', {
      detail: { theme, isDark: theme === 'dark' },
  }))
  })()
  </script>
  </head>
  <body class="font-sans bg-background text-foreground">
    <slot />
  </body>
</html>
